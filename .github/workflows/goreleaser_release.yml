name: LIVE Self-Hosted GoReleaser

on:
  release:
    types: [published]
  workflow_dispatch:
  repository_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  goreleaser:
    name: LIVE GoReleaser
    runs-on: [self-hosted, ubu2204-gor]
    steps:
      - name: Show actor
        run: echo "Triggered by ${{ github.actor }}"

      # Block unallowed push users
      - name: Block unallowed push user
        if: github.event_name == 'push' && github.actor != 'go-while'
        run: |
          echo "Push not allowed for user ${{ github.actor }}"
          exit 1

      # Block unallowed PR users
      - name: Block unallowed PR user
        if: github.event_name == 'pull_request' && github.event.pull_request.user.login != 'go-while'
        run: |
          echo "Pull request not allowed for user ${{ github.event.pull_request.user.login }}"
          exit 1

      - name: "@Start Clean directory"
        run: |
          echo "deleting workspace"
          rm -rf dist build ${{ github.workspace }}/
          mkdir -vp ${{ github.workspace }}

      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Go"
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false

      #- name: "Restore go cache"
      #  run: runner/go-cache-restore.sh

      - name: "clone rapidyenc"
        run: cd rapidyenc && ./clone_rapidyenc.sh

      - name: "compile rapidyenc"
        run: cd rapidyenc && ./build_rapidyenc.sh

      - name: "Run GoReleaser (Live Build)"
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Set GaRuS Variables"
        run: |
          SAFE_VERSION="$(echo "${GITHUB_REF_NAME}" | sed 's|/|-|g')"
          echo "GITHUB_SHA7=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "VERSION=${SAFE_VERSION}" >> $GITHUB_ENV

      - name: "Upload binary to private GaRuS (Git-actions-Runner-upload-Server)"
        run: .goreleaser/post_upload_GaRuS.sh
        env:
          BUILD_TEST_UPLOAD_TOKEN: ${{ secrets.BUILD_TEST_UPLOAD_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF_NAME: ${{ env.VERSION }}
          GITHUB_SHA7: ${{ env.GITHUB_SHA7 }}
          COMPILER: "GOR"

      #- name: "Backup go cache"
      #  run: runner/go-cache-backup.sh

      - name: "@End Clean directory"
        run: |
          echo "deleting workspace"
          rm -rf dist build ${{ github.workspace }}/
          mkdir -vp ${{ github.workspace }}
