name: Arch Cross-Build PKGBUILD

on:
  workflow_dispatch:

jobs:
  crossbuild-arch:
    name: Build Arch PKGBUILD (${{ matrix.arch }})
    runs-on:
      - self-hosted
      - ubu2204
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64    # amd64
          - aarch64   # arm64
          - armv7h    # armv7
          - i686      # i386

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go environment
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install archlinux-keyring and base-devel (if needed)
        run: |
          if ! command -v makepkg >/dev/null; then
            echo "makepkg not found! Please install the Arch base-devel group and makepkg on the runner."
            exit 1
          fi
          if ! command -v gpg >/dev/null; then
            echo "gpg not found! Please install archlinux-keyring or gpg on the runner."
            exit 1
          fi

      - name: Build binary for ${{ matrix.arch }}
        run: |
          set -euxo pipefail
          # Map arch to GOARCH/GOARM as needed
          export GOOS=linux
          case "${{ matrix.arch }}" in
            x86_64)
              export GOARCH=amd64
              ;;
            aarch64)
              export GOARCH=arm64
              ;;
            armv7h)
              export GOARCH=arm
              export GOARM=7
              ;;
            i686)
              export GOARCH=386
              ;;
            *)
              echo "Unknown arch"
              exit 1
              ;;
          esac
          go mod tidy
          go build -o "NZBreX-${{ matrix.arch }}"

      - name: Prepare PKGBUILD and sources
        run: |
          mkdir pkgbuilddir
          # Copy PKGBUILD (update path if needed)
          cp packaging/PKGBUILD pkgbuilddir/
          # Copy built binary and required static files to pkgbuilddir
          cp "NZBreX-${{ matrix.arch }}" pkgbuilddir/
          cp cleanHeaders.txt provider.sample.json provider.ygg.json pkgbuilddir/
          cd pkgbuilddir
          # Optionally update pkgver/pkgrel in PKGBUILD if needed (sed, etc.)

      - name: Build .pkg.tar.zst (no sudo)
        working-directory: pkgbuilddir
        run: |
          set -euxo pipefail
          # Use --noconfirm and --noprogressbar to avoid prompts
          # Use --skipinteg if you don't have checksums, but recommended to update them!
          makepkg --noconfirm --noprogressbar --skipinteg

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: NZBreX-${{ matrix.arch }}-pkg
          path: pkgbuilddir/*.pkg.tar.zst