name: Build and Publish

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  build_matrix:
    name: Build ${{ matrix.name }}
    runs-on:
      - self-hosted
      - ${{ matrix.runner_label }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Alpine Linux cross-builds (musl)
          # amd64
          - runner_label: ubu2204
            os: linux
            arch: amd64
            name: alpine-amd64
            libc: musl
          # arm64
          - runner_label: ubu2204
            os: linux
            arch: arm64
            name: alpine-arm64
            libc: musl
          # i386
          - runner_label: ubu2204
            os: linux
            arch: 386
            name: alpine-i386
            libc: musl
          # armv7
          - runner_label: ubu2204
            os: linux
            arch: arm
            name: alpine-armv7
            libc: musl

          # FreeBSD cross-builds
          # amd64
          - runner_label: ubu2204
            os: freebsd
            arch: amd64
            name: freebsd-amd64
          # arm64
          - runner_label: ubu2204
            os: freebsd
            arch: arm64
            name: freebsd-arm64
          # i386
          - runner_label: ubu2204
            os: freebsd
            arch: 386
            name: freebsd-i386
          # armv7
          - runner_label: ubu2204
            os: freebsd
            arch: arm
            name: freebsd-armv7

          # OpenBSD cross-builds
          # amd64
          - runner_label: ubu2204
            os: openbsd
            arch: amd64
            name: openbsd-amd64
          # arm64
          - runner_label: ubu2204
            os: openbsd
            arch: arm64
            name: openbsd-arm64
          # i386
          - runner_label: ubu2204
            os: openbsd
            arch: 386
            name: openbsd-i386

          # NetBSD cross-builds
          # amd64
          - runner_label: ubu2204
            os: netbsd
            arch: amd64
            name: netbsd-amd64
          # arm64
          - runner_label: ubu2204
            os: netbsd
            arch: arm64
            name: netbsd-arm64
          # i386
          - runner_label: ubu2204
            os: netbsd
            arch: 386
            name: netbsd-i386
          # armv7
          - runner_label: ubu2204
            os: netbsd
            arch: arm
            name: netbsd-armv7

          # macOS cross-builds
          # amd64
          - runner_label: ubu2204
            os: darwin
            arch: amd64
            name: macos-amd64
          # arm64
          - runner_label: ubu2204
            os: darwin
            arch: arm64
            name: macos-arm64

          # Windows cross-builds
          # amd64
          - runner_label: ubu2204
            os: windows
            arch: amd64
            name: windows-amd64
          # arm64
          - runner_label: ubu2204
            os: windows
            arch: arm64
            name: windows-arm64
          # i386
          - runner_label: ubu2204
            os: windows
            arch: 386
            name: windows-i386

          # Debian 10-12 self-hosted builds amd64
          # amd64
          - runner_label: deb10
            os: linux
            arch: amd64
            name: debian-10-amd64
            libc: glibc
          - runner_label: deb11
            os: linux
            arch: amd64
            name: debian-11-amd64
            libc: glibc
          - runner_label: deb12
            os: linux
            arch: amd64
            name: debian-12-amd64
            libc: glibc

          # Debian 10-12 self-hosted builds arm64
          # arm64
          - runner_label: deb10
            os: linux
            arch: arm64
            name: debian-10-arm64
            libc: glibc
          - runner_label: deb11
            os: linux
            arch: arm64
            name: debian-11-arm64
            libc: glibc
          - runner_label: deb12
            os: linux
            arch: arm64
            name: debian-12-arm64
            libc: glibc

          # Debian 10-12 self-hosted builds 32-bit ARM
          # armv7
          - runner_label: deb10
            os: linux
            arch: arm
            name: debian-10-armv7
            libc: glibc
          - runner_label: deb11
            os: linux
            arch: arm
            name: debian-11-armv7
            libc: glibc
          - runner_label: deb12
            os: linux
            arch: arm
            name: debian-12-armv7
            libc: glibc

          # Debian 10-12 self-hosted builds i386
          # i386
          - runner_label: deb10
            os: linux
            arch: 386
            name: debian-10-i386
            libc: glibc
          - runner_label: deb11
            os: linux
            arch: 386
            name: debian-11-i386
            libc: glibc
          - runner_label: deb12
            os: linux
            arch: 386
            name: debian-12-i386
            libc: glibc

          # Ubuntu 20.04 - 24.04 self-hosted builds amd64
          # amd64
          - runner_label: ubu2004
            os: linux
            arch: amd64
            name: ubuntu-20.04-amd64
            libc: glibc
          - runner_label: ubu2204
            os: linux
            arch: amd64
            name: ubuntu-22.04-amd64
            libc: glibc
          - runner_label: ubu2404
            os: linux
            arch: amd64
            name: ubuntu-24.04-amd64
            libc: glibc

          # Ubuntu 20.04 - 24.04 self-hosted builds arm64
          # arm64
          - runner_label: ubu2004
            os: linux
            arch: arm64
            name: ubuntu-20.04-arm64
            libc: glibc
          - runner_label: ubu2204
            os: linux
            arch: arm64
            name: ubuntu-22.04-arm64
            libc: glibc
          - runner_label: ubu2404
            os: linux
            arch: arm64
            name: ubuntu-24.04-arm64
            libc: glibc

          # Ubuntu 20.04 - 24.04 self-hosted builds 32-bit ARM
          # armv7
          - runner_label: ubu2004
            os: linux
            arch: arm
            name: ubuntu-20.04-armv7
            libc: glibc
          - runner_label: ubu2204
            os: linux
            arch: arm
            name: ubuntu-22.04-armv7
            libc: glibc
          - runner_label: ubu2404
            os: linux
            arch: arm
            name: ubuntu-24.04-armv7
            libc: glibc

          # Ubuntu 20.04 - 24.04 self-hosted builds i386
          # i386
          - runner_label: ubu2004
            os: linux
            arch: 386
            name: ubuntu-20.04-i386
            libc: glibc
          - runner_label: ubu2204
            os: linux
            arch: 386
            name: ubuntu-22.04-i386
            libc: glibc
          - runner_label: ubu2404
            os: linux
            arch: 386
            name: ubuntu-24.04-i386
            libc: glibc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Run tests with race detector for supported platforms
      - name: Run race detector tests (amd64/linux only)
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        run: go test -race ./...

      - name: Run normal tests (other platforms)
        if: ${{ !(matrix.os == 'linux' && matrix.arch == 'amd64') }}
        run: go test ./...

      - name: Set Ref Name Variable
        run: |
          if [ "$GITHUB_EVENT_NAME" != "release" ]; then
            ref_name=${GITHUB_SHA::7}
          else
            ref_name=${{ github.ref_name }}
          fi
          echo "REF_NAME=${ref_name}" >> "$GITHUB_ENV"

      - name: Build ${{ matrix.name }}
        run: |
          set -euo pipefail
          mkdir -p builds/${{ matrix.name }}/usr/bin
          if [ "${{ matrix.os }}" == "windows" ]; then
            binary_name=NZBreX.exe
          else
            binary_name=NZBreX
          fi
          GOARCH=${{ matrix.arch }} GOOS=${{ matrix.os }} go build -ldflags="-s -w -X main.appVersion=${{ env.REF_NAME }}" -o builds/${{ matrix.name }}/usr/bin/$binary_name
          if [ ! -f cleanHeaders.txt ]; then
            echo "cleanHeaders.txt not found! Build cannot continue." >&2
            exit 1
          fi
          if [ ! -f provider.sample.json ]; then
            echo "provider.sample.json not found! Build cannot continue." >&2
            exit 1
          fi
          if [ ! -f provider.ygg.json ]; then
            echo "provider.ygg.json not found! Build cannot continue." >&2
            exit 1
          fi
          zip -j "NZBreX_${{ env.REF_NAME }}-${{ matrix.name }}.zip" builds/${{ matrix.name }}/usr/bin/$binary_name cleanHeaders.txt provider.sample.json provider.ygg.json
          # Only make .deb packages for Linux with glibc
          matrix_libc="${{ matrix.libc }}"
          matrix_distro="${{ matrix.distro }}"
          if [ "${{ matrix.os }}" == "linux" ] && [ "${{ matrix.libc }}" = "glibc" -o -z "${{ matrix.libc }}" ]; then
            mkdir -p builds/${{ matrix.name }}/DEBIAN
            VERSION=$(echo "${{ github.ref_name }}" | sed 's/^v//')
            if [[ ! $VERSION =~ ^[0-9] ]]; then
              VERSION="0.0.$(date +%s)-$VERSION"
            fi
            ARCH=${{ matrix.arch }}
            echo "Package: NZBreX" > builds/${{ matrix.name }}/DEBIAN/control
            echo "Version: ${VERSION}" >> builds/${{ matrix.name }}/DEBIAN/control
            echo "Maintainer: ${{ github.repository_owner }} <nzbrex@usenet-server.com>" >> builds/${{ matrix.name }}/DEBIAN/control
            echo "Architecture: ${ARCH}" >> builds/${{ matrix.name }}/DEBIAN/control
            echo "Description: NZBreX - a cmd line tool to re-upload articles missing from providers" >> builds/${{ matrix.name }}/DEBIAN/control
            dpkg-deb --root-owner-group --build builds/${{ matrix.name }} NZBreX_${{ env.REF_NAME }}-${{ matrix.name }}.deb
          fi

#      - name: Upload Build Artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-${{ matrix.name }}
#          path: |
#            NZBreX_${{ env.REF_NAME }}-${{ matrix.name }}.zip
#            NZBreX_${{ env.REF_NAME }}-${{ matrix.name }}.deb
#            builds/${{ matrix.name }}/archpkg/PKGBUILD
#            builds/${{ matrix.name }}/archpkg/nzbrex-*.pkg.tar.*
#            builds/${{ matrix.name }}/archpkg/NZBreX
#            builds/${{ matrix.name }}/archpkg/cleanHeaders.txt
#            builds/${{ matrix.name }}/archpkg/provider.sample.json
#            builds/${{ matrix.name }}/archpkg/provider.ygg.json
#          retention-days: 1
#          if-no-files-found: warn

#      - name: Upload Binary (optional)
#        uses: actions/upload-artifact@v4
#        with:
#          name: binary-${{ matrix.name }}
#          path: builds/${{ matrix.name }}/usr/bin/*
#          retention-days: 1
#          if-no-files-found: warn

#      - name: Upload Release Assets
#        if: github.event_name == 'release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: |
#            NZBreX_${{ env.REF_NAME }}-*.zip
#            NZBreX_${{ env.REF_NAME }}-*.deb
#            builds/*/archpkg/nzbrex-*.pkg.tar.*
#            builds/*/archpkg/PKGBUILD
