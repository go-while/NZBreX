project_name: NZBreX
dist: dist

builds:
  # Linux glibc targets (Debian, Ubuntu, etc.)
  - id: linux-glibc
    main: .
    goos: [linux]
    goarch: [amd64, 386, arm, arm64]
    goarm: [6, 7]
    ldflags: ['-s -w -X main.appVersion={{.Version}}']
    env:
      - CGO_ENABLED=0

  # Linux musl (Alpine) targets
  - id: linux-musl
    main: .
    goos: [linux]
    goarch: [amd64, 386, arm, arm64]
    goarm: [6, 7]
    ldflags: ['-s -w -X main.appVersion={{.Version}}']
    env:
      - CGO_ENABLED=1
      - CC=musl-gcc
    binary: NZBreX
    flags:
      - -tags=musl

  # BSD targets
  - id: bsd
    main: .
    goos: [freebsd, openbsd, netbsd]
    goarch: [amd64, 386, arm, arm64]
    goarm: [6, 7]
    ldflags: ['-s -w -X main.appVersion={{.Version}}']
    env:
      - CGO_ENABLED=0

  # macOS (darwin)
  - id: macos
    main: .
    goos: [darwin]
    goarch: [amd64, arm64]
    ldflags: ['-s -w -X main.appVersion={{.Version}}']
    env:
      - CGO_ENABLED=0

  # Windows
  - id: windows
    main: .
    goos: [windows]
    goarch: [amd64, 386, arm64]
    ldflags: ['-s -w -X main.appVersion={{.Version}}']
    env:
      - CGO_ENABLED=0

archives:
  - format: zip
    #name_template: NZBreX_{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .ID }}-{{ .ID }}{{ end }}
    name_template: NZBreX_{{ .Version }}-{{ if eq .Os "darwin" }}macos{{ else }}{{ .Os }}{{ end }}-{{ if eq .Arch "386" }}i386{{ else if eq .Arch "arm" }}armv{{ .Arm }}{{ else }}{{ .Arch }}{{ end }}{{ if .ID }}-{{ .ID }}{{ end }}
    files:
      - NZBreX*
      - cleanHeaders.txt
      - provider.sample.json
      - provider.ygg.json

checksum:
  name_template: 'NZBreX_{{ .Version }}_checksums.txt'
  algorithm: sha256

changelog:
  sort: asc

nfpms:
  - id: deb
    formats: [deb]
    vendor: NZBreX
    maintainer: "NZBreX <nzbrex@usenet-server.com>"
    description: "NZBreX - a cmd line tool to re-upload articles missing from providers"
    homepage: "https://github.com/go-while/NZBreX"
    license: "MIT"
    bindir: /usr/bin
    file_name_template: NZBreX_{{ .Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}.deb


release:
  github:
    owner: go-while
    name: NZBreX

pipeline:
  post_upload_manual:
    when:
      event: manual
    cmd: .goreleaser/post_upload_GaRuS.sh

#  post_upload_release:
#    when:
#      event: release
#    cmd: .goreleaser/post_upload_GaRuS.sh

#  post_upload:
#    when:
#      event: [release, manual]
#    cmd: .goreleaser/post_upload_GaRuS.sh

# Supported event: values
#  release — when running an actual release (e.g., for a new Git tag)
#  snapshot — when running in snapshot mode (local test build)
#  pull_request — when triggered by a pull request (in CI)
#  push — when triggered by a push event (in CI)
#  manual — when triggered manually (GitHub Actions “workflow_dispatch”)
#  all — always runs, regardless of event

